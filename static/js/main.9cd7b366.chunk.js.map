{"version":3,"sources":["Components/Tooltip.js","Components/Hendi.js","Components/DigitalReadout.js","Components/AdjustableDigitalReadout.js","Components/TemperatureController.js","Components/VirtualHendiInterface.js","App.js","serviceWorker.js","index.js"],"names":["Tooltip","props","updatePosition","bind","state","position","top","left","document","onmousemove","event","setState","clientY","clientX","this","visible","console","log","className","style","header","text","Component","Hendi","test","getMapBorders","_isMounted","bg","fg","ch","stark","quad","laserbeam","canister","activeToolTipHeader","activeToolTipText","toolTipActive","tooltip","tooltips","detection","doping","source","coldhead","skimmer","nozzle","x1","y1","x2","y2","h","getElementById","id","clientHeight","w","clientWidth","getX","x","Number","getY","Y","setTimeout","areas","onMouseEnter","setActiveTooltip","onMouseLeave","areasToKeep","divsToRender","concat","forEach","elem","push","map","src","useMap","getToolTipAreas","DigitalReadout","String","number","toFixed","padStart","unit","AdjustableDigitalReadout","increment","decrement","parent","state_to_mod","max","min","onClick","TemperatureController","temperature","VirtualHendiInterface","hendiRef","React","createRef","hideForeground","fgState","toggleFgTitle","current","showForeground","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9cd7b366.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport '../Style/Tooltip.css'\r\nexport default class Tooltip extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.props=props;\r\n        this.updatePosition=this.updatePosition.bind(this);\r\n        this.state = {\r\n            position:{\r\n                top:0,\r\n                left:0,\r\n            }\r\n        }\r\n        document.onmousemove = event=>{\r\n            this.setState({position:{\r\n                top:event.clientY,\r\n                left:event.clientX\r\n            }})\r\n        };\r\n        \r\n    }\r\n    updatePosition(event){\r\n        if(this.props.visible){\r\n            console.log(event);\r\n        }\r\n    }\r\n    render(){\r\n        if(this.props.visible){\r\n            return(\r\n                <div className='tooltip' style={this.state.position}>\r\n                    <label>{this.props.header}</label>\r\n                    {this.props.text}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return <div/>\r\n        }\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport '../Style/Hendi.css'\r\nimport Tooltip from './Tooltip';\r\nexport default class Hendi extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.props = props;\r\n        this.test=this.test.bind(this);\r\n        this.getMapBorders=this.getMapBorders.bind(this);\r\n        this._isMounted=false;\r\n        this.state={\r\n            bg:true,\r\n            fg:true,\r\n            ch:true,\r\n            stark:true,\r\n            quad:true,\r\n            laserbeam:true,\r\n            canister:true,\r\n            activeToolTipHeader:'',\r\n            activeToolTipText:'',\r\n            toolTipActive:false\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n        this.getMapBorders(0,0,100,100, 'ch_area');\r\n    }\r\n    hideForeground(){\r\n        this.setState({\r\n            fg:false,\r\n            canister:false\r\n        })\r\n    }\r\n    showForeground(){\r\n        this.setState({\r\n            fg:true,\r\n            canister:true\r\n        })\r\n    }\r\n    setActiveTooltip(tooltip){\r\n        const tooltips = {\r\n            detection:{\r\n                header: 'Detection Chamber',\r\n                text:<p>This chamber contains the mass spectrometer and often has pressures as low as 10<sup>-11</sup> Torr.</p>\r\n            },\r\n            doping:{\r\n                header: 'Doping Chamber',\r\n                text:<p>This chamber is where the analyte molecules condense into the molecular beam.</p>\r\n            },\r\n            source:{\r\n                header: 'Source Chamber',\r\n                text:<p>This is where the Helium droplets are formed.</p>\r\n            },\r\n            coldhead:{\r\n                header: 'Coldhead',\r\n                text:<p>This is a large piece of copper which is cooled to a temperature of around 30 K by the cyclic evaporation and condensation of helium.</p>\r\n            },\r\n            stark:{\r\n                header: 'Stark Cell',\r\n                text:<p>The Stark cell consists of two mirror-polished steel plates that are used to generate an electric field of up to 75 kV/cm. The electric field affects the rotation of the analyte based on its dipole moment.</p>\r\n            },\r\n            quad:{\r\n                header: 'Quadrupole mass spectrometer',\r\n                text:<p>The mass spectrometer is used to measure the helium evaporated by the excitation and subsequent relaxation of the analyte due to the laser.</p>\r\n            },\r\n            laserbeam:{\r\n                header: 'Infrared Laser',\r\n                text:<p>The laser is used to excite the analyte at certain wavelengths, which causes the moleule to relax, transferring its energy to the helium surrounding it, causing some helium to evaporate.&nbsp;\r\n                    This causes a decrease in the total ion signal from the mass spectrometer, which forms a spectrum when scanning across a range of wavelengths.</p>\r\n            },\r\n            canister:{\r\n                header: 'Gas Cannister',\r\n                text:<p>The analyte, in gas form, is stored here. It is leaked into the doping chamber via a leak valve</p>\r\n            },\r\n            skimmer:{\r\n                header: 'Skimmer',\r\n                text:<p>The spray of helium droplets are skimmed into a molecular beam, which then travels into the doping chamber</p>\r\n            },\r\n            nozzle:{\r\n                header: 'Nozzle',\r\n                text:<p>The helium gas, chilled from thermal contact with the coldhead, is ejected from the nozzle into vacuum (~10<sup>-5</sup> Torr), rapidly cooling the helium to 0.4 K, where it condenses into a superfluid.</p>\r\n            },\r\n\r\n        }\r\n        this.setState({\r\n            toolTipActive:true,\r\n            activeToolTipHeader:tooltips[tooltip].header,\r\n            activeToolTipText:tooltips[tooltip].text,\r\n        })\r\n        \r\n    }\r\n    test(){\r\n        console.log('test')\r\n    }\r\n    getMapBorders(x1, y1, x2, y2, state){\r\n        if(this._isMounted){\r\n            const h = document.getElementById(this.props.id).clientHeight;\r\n            const w = document.getElementById(this.props.id).clientWidth;\r\n            console.log(w, h)\r\n            const getX = x =>{\r\n                return Number(w)*x/100;\r\n            }\r\n            const getY = Y =>{\r\n                return Number(h)*Y/100;\r\n            }\r\n            this.setState({[state]:`${getX(x1)},${getY(y1)},${getX(x2)},${getY(y2)}`}) \r\n        }\r\n        else{\r\n            setTimeout(this.getMapBorders,100,[x1,y1,x2,y2])\r\n        }\r\n        \r\n        \r\n    }\r\n    getToolTipAreas(){\r\n        const areas = {\r\n            detection:<div className='area-div' id=\"hendi-detection-clickable\" onMouseEnter={()=>{this.setActiveTooltip('detection')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            doping:<div className='area-div' id=\"hendi-doping-clickable\" onMouseEnter={()=>{this.setActiveTooltip('doping')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            source:<div className='area-div' id=\"hendi-source-clickable\" onMouseEnter={()=>{this.setActiveTooltip('source')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            ch:<div className='area-div' id=\"hendi-ch-clickable\" onMouseEnter={()=>{this.setActiveTooltip('coldhead')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            stark:<div className='area-div' id=\"hendi-stark-clickable\" onMouseEnter={()=>{this.setActiveTooltip('stark')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            quad:<div className='area-div' id=\"hendi-quad-clickable\" onMouseEnter={()=>{this.setActiveTooltip('quad')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            laserbeam:<div className='area-div' id=\"hendi-laserbeam-clickable\" onMouseEnter={()=>{this.setActiveTooltip('laserbeam')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            canister:<div className='area-div' id=\"hendi-canister-clickable\" onMouseEnter={()=>{this.setActiveTooltip('canister')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            skimmer:<div className='area-div' id=\"hendi-skimmer-clickable\" onMouseEnter={()=>{this.setActiveTooltip('skimmer')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n            nozzle:<div className='area-div' id=\"hendi-nozzle-clickable\" onMouseEnter={()=>{this.setActiveTooltip('nozzle')}} onMouseLeave={()=>{this.setState({toolTipActive:false})}}></div>,\r\n        }\r\n        let areasToKeep = [];\r\n        let divsToRender = [];\r\n        if(this.state.fg){\r\n            areasToKeep = areasToKeep.concat(['detection','doping', 'source','canister'])\r\n        }\r\n        else{\r\n            areasToKeep = areasToKeep.concat(['ch','quad','laserbeam','skimmer','nozzle', 'stark'])\r\n        }\r\n        areasToKeep.forEach(elem=>{\r\n            divsToRender.push(areas[elem])\r\n        })\r\n        return divsToRender.map(elem=>elem);\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='hendi-box' id={this.props.id}>\r\n                <img className={`hendi-component ${this.state.bg?'':'transparent'}`} id='hendi-bg' src='images/hendi-background.png'/>\r\n                <img className={`hendi-component ${this.state.fg?'':'transparent'}`} id='hendi-fg' src='images/hendi-foreground.png'/>\r\n                <img className={`hendi-component ${this.state.ch?'':'transparent'}`} id='hendi-ch' src='images/hendi-coldhead.png'/>\r\n                <img className={`hendi-component ${this.state.stark?'':'transparent'}`} id='hendi-stark' src='images/hendi-stark.png'/>\r\n                <img className={`hendi-component ${this.state.quad?'':'transparent'}`} id='hendi-quad' src='images/hendi-quad.png'/>\r\n                <img className={`hendi-component ${this.state.laserbeam?'':'transparent'}`} id='hendi-laserbeam' src='images/hendi-laserbeam.png'/>\r\n                <img className={`hendi-component ${this.state.canister?'':'transparent'}`} id='hendi-ocs-canister' src='images/hendi-ocs-canister.png' useMap='hendi-map'/>\r\n                <Tooltip header={this.state.activeToolTipHeader} text={this.state.activeToolTipText} visible={this.state.toolTipActive}></Tooltip>\r\n                {this.getToolTipAreas()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport '../Style/DigitalReadout.css'\r\nexport default class DigitalReadout extends Component{\r\n    render(){\r\n        return (\r\n            <div id={this.props.id} className={this.props.className}><label className='digital-readout'>{String(Number(this.props.number).toFixed(2)).padStart(6,'0')} {this.props.unit}</label></div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport DigitalReadout from './DigitalReadout'\r\nimport '../Style/AdjustableDigitalReadout.css'\r\nexport default class AdjustableDigitalReadout extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.props=props;\r\n        this.increment=this.increment.bind(this);\r\n        this.decrement=this.decrement.bind(this);\r\n    }\r\n    increment(){\r\n        if(this.props.parent.state[this.props.state_to_mod]+this.props.increment<=this.props.max){\r\n            this.props.parent.setState({[this.props.state_to_mod]:this.props.parent.state[this.props.state_to_mod]+this.props.increment});\r\n        }\r\n    }\r\n    decrement(){\r\n        if(this.props.parent.state[this.props.state_to_mod]-this.props.increment>=this.props.min){\r\n            this.props.parent.setState({[this.props.state_to_mod]:this.props.parent.state[this.props.state_to_mod]-this.props.increment});\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div id={this.props.id} className={this.props.className + ' digital-readout-adjustable'}>\r\n                <DigitalReadout number={this.props.parent.state[this.props.state_to_mod]} unit={this.props.unit}/>\r\n                <div className='button-container'>\r\n                    <button onClick={this.increment}>+</button>\r\n                    <button onClick={this.decrement}>-</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport '../Style/TemperatureController.css';\r\nimport '../Style/VirtualHendiInterface.css';\r\nimport AdjustableDigitalReadout from './AdjustableDigitalReadout';\r\nexport default class TemperatureController extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.props=props;\r\n        this.state={\r\n            temperature:0\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='temp-controller' id = {this.props.id}>\r\n                <div className='instrument-label-readout' id='temp-controller-temp'>\r\n                    <label className='instrument-label'>Nozzle Temperature</label>\r\n                    <AdjustableDigitalReadout parent={this} increment={0.5} state_to_mod='temperature' unit='K' min={0} max={50}></AdjustableDigitalReadout>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport Hendi from './Hendi';\r\nimport DigitalReadout from './DigitalReadout';\r\nimport '../Style/VirtualHendiInterface.css'\r\nimport TemperatureController from './TemperatureController'\r\n\r\nexport default class VirtualHendiInterface extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.props = props;\r\n        this.hendiRef=React.createRef();\r\n        this.hideForeground=this.hideForeground.bind(this);\r\n        this._isMounted=false;\r\n        this.state={\r\n            fgState:true,\r\n            toggleFgTitle:'See Inside the Instrument'\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n    }\r\n    hideForeground(){\r\n        if(this._isMounted){\r\n            if(this.state.fgState){\r\n                this.hendiRef.current.hideForeground();\r\n                this.setState({fgState:false, toggleFgTitle:'Toggle Instrument Transparency'})\r\n            }\r\n            else{\r\n                this.hendiRef.current.showForeground();\r\n                this.setState({fgState:true, toggleFgTitle:'See Inside the Instrument'})\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div id='main-virtual-hendi-interface-container'>\r\n                <Hendi id='hendi-instrument' ref={this.hendiRef}/>\r\n                <div id='control-box'>\r\n                    <button onClick={this.hideForeground}>{this.state.toggleFgTitle}</button>\r\n                    <TemperatureController id='temperature-controller' parent={this}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport VirtualHendiInterface from './Components/VirtualHendiInterface';\n\nfunction App() {\n  return (\n    <VirtualHendiInterface/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}